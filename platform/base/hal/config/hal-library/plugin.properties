name=HAL Library

description=The standard HAL library.

category=HAL

qualityString=Production Ready
quality=Production

requiredApis=adc,coexistence
api.adc.condition=conf.architectureMatches("em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598")

providedApis=aes,hal,token

callbacks=$HAL/config/hal-callback.info

$HAL/micro/cortexm3/efm32/hal-config.c                                (efr32)
$HAL/micro/cortexm3/efm32/hal-config-gpio.c                           (efr32)
$SERVICE/mpu/src/sl_mpu.c                                             (efr32)
$SERVICE/power_manager/src/sl_power_manager.c                         (efr32)
$SERVICE/power_manager/src/sl_power_manager_debug.c                   (efr32)
$SERVICE/power_manager/src/sl_power_manager_hal_s0_s1.c               (efr32)
$SERVICE/power_manager/src/sl_power_manager_hal_s2.c                  (efr32)
$COMMON/src/sl_slist.c                                                (efr32)

$DEVICE/SiliconLabs/em34x/Source/IAR/irqToIsrTrampolines_em34x.s   (em341+iar,em342+iar,em346+iar)
$DEVICE/SiliconLabs/em35x/Source/IAR/irqToIsrTrampolines_em35x.s   (em351+iar,em355+iar,em357+iar)
$DEVICE/SiliconLabs/em355x/Source/IAR/irqToIsrTrampolines_em355x.s (em3555+iar)
$DEVICE/SiliconLabs/em358x/Source/IAR/irqToIsrTrampolines_em358x.s (em3581+iar,em3582+iar,em3585+iar,em3586+iar,em3587+iar,em3588+iar)
$DEVICE/SiliconLabs/em359x/Source/IAR/irqToIsrTrampolines_em359x.s (em3591+iar,em3592+iar,em3595+iar,em3596+iar,em3597+iar,em3598+iar)
$DEVICE/SiliconLabs/em34x/Source/GCC/irqToIsrTrampolines_em34x.s   (em341+gcc,em342+gcc,em346+gcc)
$DEVICE/SiliconLabs/em35x/Source/GCC/irqToIsrTrampolines_em35x.s   (em351+gcc,em355+gcc,em357+gcc)
$DEVICE/SiliconLabs/em355x/Source/GCC/irqToIsrTrampolines_em355x.s (em3555+gcc)
$DEVICE/SiliconLabs/em358x/Source/GCC/irqToIsrTrampolines_em358x.s (em3581+gcc,em3582+gcc,em3585+gcc,em3586+gcc,em3587+gcc,em3588+gcc)
$DEVICE/SiliconLabs/em359x/Source/GCC/irqToIsrTrampolines_em359x.s (em3591+gcc,em3592+gcc,em3595+gcc,em3596+gcc,em3597+gcc,em3598+gcc)

libraryFiles=$FRAMEWORK/../../build/hal-library-{platformDirectorySuffix}/hal-library.a

includedByDefault=true

setup(additionalFiles) {
  (efr32)=PATH(ABSOLUTE):$SERVICE/mpu/inc
  (efr32)=PATH(ABSOLUTE):$SERVICE/power_manager/inc
  (efr32)=PATH(ABSOLUTE):$SERVICE/sleeptimer/inc
  (efr32)=PATH(ABSOLUTE):$SERVICE/sleeptimer/src
}

setup(macros){
  -DEMLIB_USER_CONFIG
  -DSL_CATALOG_POWER_MANAGER_PRESENT
}

setup(template){
  (efr32~series[1]):lockbitsInMainflashSize=0
  (efr32~series[2]):lockbitsInMainflashSize=8192
  (em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598):lockbitsInMainflashSize=0
  headerSize=512
  (em317,em346,em351,em355,em3555,em356,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598):headerSize=256
  (efr32~series[1]~device_configuration[1]):headerSize=256
  (efr32~series[1]~device_configuration[3]):headerSize=256
  (efr32~series[1]~device_configuration[4]):headerSize=256
  (efr32):btlSize=16384
  (efr32~series[2]~device_configuration[2]):btlSize=24576

  # The GNU linker needs to be told how large certain sections are. This plugin
  # defaults them to zero and the corresponding plugins, when enabled, override
  # each one individually with a more specific template setup line.
  psstoreSize=0
  longTokenSize=0
}
