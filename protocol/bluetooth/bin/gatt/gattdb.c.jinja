/********************************************************************
 * Autogenerated file, do not edit.
 *******************************************************************/

#include <stdint.h>
#include "bg_gattdb_def.h"

#define GATT_HEADER(F) F
#define GATT_DATA(F) F
GATT_DATA(const uint16_t {{db.name}}_uuidtable_16_map [])=
{
{%-     for u in db.uuid16s %}
    0x{{'%04x'%u.u16()}},
{%-     endfor %}
};

GATT_DATA(const uint8_t {{db.name}}_uuidtable_128_map [])=
{
{%- if db.uuid128s|length %}
{%-     for u in db.uuid128s %}
{{u.bytes|carray2}}
{%-     endfor %}
{%- else %}
    0x0 //IAR workaround for empty array
{%- endif %}
};



{%     for a in db.attribute_rows | reverse%}
{%-   if a.value.type == GattConst.ConstValue %}
GATT_DATA(const struct bg_gattdb_buffer_with_len	{{db.name}}_attribute_field_{{loop.revindex0}} ) = {
	.len={{ a.value.bytes|length }},
	.data={{a.value.bytes|carray}}
};
{%-   elif a.value.type == GattConst.DynamicValue %}
uint8_t {{db.name}}_attribute_field_{{loop.revindex0}}_data[{{ a.value.bytes|length }}]={{a.value.bytes|carray}};
GATT_DATA(const struct bg_gattdb_attribute_chrvalue	{{db.name}}_attribute_field_{{loop.revindex0}} ) = {
	.properties=0x{{'%02x'%a.properties}},
	.index={{a.value.dynamic_index}},
	.max_len={{ a.value.maxlen }},
	.data={{db.name}}_attribute_field_{{loop.revindex0}}_data,
};
{%-   elif a.value.type == GattConst.VariableLengthValue%}
struct bg_gattdb_buffer_with_len	{{db.name}}_attribute_field_{{loop.revindex0}}_data = {
	.len={{a.value.datalen}},
	.data={{a.value.bytes|carray}}
};
GATT_DATA(const struct bg_gattdb_attribute_chrvalue	{{db.name}}_attribute_field_{{loop.revindex0}} ) = {
	.properties=0x{{'%02x'%a.properties}},
	.index={{a.value.dynamic_index}},
	.max_len={{ a.value.maxlen }},
	.data_varlen=&{{db.name}}_attribute_field_{{loop.revindex0}}_data,
};
{%-   elif a.value.type == GattConst.UserValue%}
GATT_DATA(const struct bg_gattdb_attribute_chrvalue	{{db.name}}_attribute_field_{{loop.revindex0}} ) = {
	.properties=0x{{'%02x'%a.properties}},
	.index={{a.value.dynamic_index}},
	.max_len=0,
	.data=NULL,
};
{%- else %}
{%     endif %}
{%-     endfor %}

GATT_DATA(const struct bg_gattdb_attribute {{db.name}}_attributes_map[])={
{%     for a in db.attribute_rows%}
{%-   if a.value.type == GattConst.ConstValue %}
    {.uuid=0x{{'%04x'%db.uuid_handle(a.uuid)}},.permissions=0x{{'%02x'%a.permissions}},.caps=0x{{'%02x'%a.capabilities_mask()}},.datatype=0x{{'%02x'%a.value.type}},.constdata=&{{db.name}}_attribute_field_{{loop.index0}}},
{%-   elif a.value.type == GattConst.ClientConfigValue%}
    {.uuid=0x{{'%04x'%db.uuid_handle(a.uuid)}},.permissions=0x{{'%02x'%a.permissions}},.caps=0x{{'%02x'%a.capabilities_mask()}},.datatype=0x{{'%02x'%a.value.type}},.configdata={.flags=0x{{'%02x'%a.value.bytes[0]}},.index=0x{{'%02x'%a.value.dynamic_index}},.clientconfig_index=0x{{'%02x'%a.value.bytes[1]}}}},
{%-   elif a.value.type == GattConst.DynamicValue or a.value.type == GattConst.VariableLengthValue or a.value.type == GattConst.UserValue %}
    {.uuid=0x{{'%04x'%db.uuid_handle(a.uuid)}},.permissions=0x{{'%02x'%a.permissions}},.caps=0x{{'%02x'%a.capabilities_mask()}},.datatype=0x{{'%02x'%a.value.type}},.dynamicdata=&{{db.name}}_attribute_field_{{loop.index0}}},
{%-     endif %}
{%-     endfor %}
};

GATT_DATA(const uint16_t {{db.name}}_attributes_dynamic_mapping_map[])={
	{%-     for a in db.dynamic_attributes%}
	0x{{'%04x'%a.handle}},
	{%-     endfor %}
};

GATT_DATA(const uint8_t {{db.name}}_adv_uuid16_map[])={{db.advertised_services_16|carray}};
GATT_DATA(const uint8_t {{db.name}}_adv_uuid128_map[])={{db.advertised_services_128|carray}};


GATT_HEADER(const struct bg_gattdb_def {{db.name}})={
    .attributes={{db.name}}_attributes_map,
    .attributes_max={{db.attribute_rows|length}},
    .uuidtable_16_size={{db.uuid16s|length}},
    .uuidtable_16={{db.name}}_uuidtable_16_map,
    .uuidtable_128_size={{db.uuid128s|length}},
    .uuidtable_128={{db.name}}_uuidtable_128_map,
    .attributes_dynamic_max={{db.dynamic_attributes|length}},
    .attributes_dynamic_mapping={{db.name}}_attributes_dynamic_mapping_map,
    .adv_uuid16={{db.name}}_adv_uuid16_map,
    .adv_uuid16_num={{db.advertised_services_16_len}},
    .adv_uuid128={{db.name}}_adv_uuid128_map,
    .adv_uuid128_num={{db.advertised_services_128_len}},
    .caps_mask=0x{{'%02x'%db.capabilities_mask()}},
    .enabled_caps=0x{{'%02x'%db.capabilities_enabled()}},
};
{%- if db.is_default %}
const struct bg_gattdb_def *bg_gattdb=&{{db.name}};
{%- endif %}

