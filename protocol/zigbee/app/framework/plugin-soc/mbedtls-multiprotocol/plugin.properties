name=mbed TLS Multiprotocol Configuration 
description=This plugin provides the mbed TLS configuration file that enables the cryptographic algorithms that meet Silicon Labs multiprotocol requirements. The mbed TLS configuration file can be found at config-multiprotocol.h.

category=Utility
qualityString=Production Ready
quality=production
includedByDefault=false

architecture=efr32,simulation

providedApis=mbedtls-config-multiprotocol

requiredApis=micrium-rtos,ble,mbedtls

sourceFiles=
# In theory we should always be including mbedTLS whenever we use Micrium. The
# reason for this is that our version of mbedTLS provides hardware crypto
# support and if the hardware supports this. The stack and the app can use
# different instances of the crypto hardware (if the hardware supports it) so as
# not to block multiple crypto operations. Zigbee doesn't make much use of
# crypto hardware but if the customer wants to have their own tasks use crypto
# they will need it. So by extension, we should include mbedtls for all Micrium
# apps and thus sl_malloc.c
$SILABS_CORE/memory_manager/sl_malloc.c

setup(pluginService) {
  mbedtls {
    requires: bignum
    requires: ccm
    requires: cipher
    requires: cipher-mode-ctr
    requires: cmac
    requires: crypto-device-preemption
    requires: ecp
    requires: ecp-dp-secp256r1
    requires: ecp-no-fallback
    requires: ecdh
    requires: micriumos-support
    requires: platform
    requires: platform-memory
    requires: threading
    requires: threading-alt

    option: entropy-max-source=2
    option: platform-calloc-macro=bg_calloc
    option: platform-free-macro=bg_free

    rawContent:
      \#include <stddef.h>
      \#include <stdint.h>
      // bg_calloc and bg_free are implemented in bgcommon
      void bg_free(void *pv);
      void *bg_calloc(size_t num, size_t size);
      \#undef MBEDTLS_FS_IO
  }
}
