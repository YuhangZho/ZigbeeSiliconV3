name=BLE
description=If this plugin is enabled, the BLE stack will be run in parallel with the ZigBee stack. Both stacks run as Micrium OS tasks.

category=Stack Libraries
qualityString=Production Ready
quality=production
includedByDefault=false

architecture=efr32+iar,simulation

needsSetup=bleGattConfigurator

# This makes the plugin not throw an error if files are missing, but only show it as disabled.
missingFileHandling=disable

providedApis=ble
requiredApis=micrium-rtos,mbedtls,ble-token-storage
api.ble.header=ble-interface.h

sourceFiles=$BLUETOOTH_PROTOCOL/src/sl_bt_rtos_adaptation.c, ble-interface.c,ble-cli.c,$BLUETOOTH_PROTOCOL/src/sl_bt_mbedtls_context.c,sl_bluetooth.c
setup(additionalFiles) {
  PATH(ABSOLUTE):$BLUETOOTH_PROTOCOL/inc
  PATH(ABSOLUTE):$BLUETOOTH_PROTOCOL/btapi/inc
  PATH(ABSOLUTE):$ZIGBEE/app/framework/plugin-soc/ble
}

setup(template) {
  mallocHeapSize=16384
}

# Dumbo = EFR32<family>G<series><performance>
libraryFiles(efr32~series[1]~device_configuration[1])=$BLUETOOTH_PROTOCOL/lib/EFR32$--partHardware.family--$G$--partHardware.series--$$--partHardware.performance--$/IAR/libbluetooth.a
# Jumbo, Nerio, Nixi = EFR32<family>G<series><config><performance>
libraryFiles(efr32~series[1]~device_configuration[2])=$BLUETOOTH_PROTOCOL/lib/EFR32$--partHardware.family--$G$--partHardware.series--$$--partHardware.device_configuration--$$--partHardware.performance--$/IAR/libbluetooth.a
libraryFiles(efr32~series[1]~device_configuration[3])=$BLUETOOTH_PROTOCOL/lib/EFR32$--partHardware.family--$G$--partHardware.series--$$--partHardware.device_configuration--$$--partHardware.performance--$/IAR/libbluetooth.a
libraryFiles(efr32~series[1]~device_configuration[4])=$BLUETOOTH_PROTOCOL/lib/EFR32$--partHardware.family--$G$--partHardware.series--$$--partHardware.device_configuration--$$--partHardware.performance--$/IAR/libbluetooth.a
# Panther = EFR32<family>G<series><config>
libraryFiles(efr32~series[2])=$BLUETOOTH_PROTOCOL/lib/EFR32$--partHardware.family--$G$--partHardware.series--$$--partHardware.device_configuration--$/IAR/libbluetooth.a

libraryStubFiles=

implementedCallbacks=emberAfPluginBleInitCallback,emberAfPluginBleTickCallback

options=maxConnections,maxUserAdvertisers,maxPeriodicAdvertisingSync,bleStackSize,linkLayerStackSize

maxConnections.name=Max number of BLE connections
maxConnections.description=The maximum number of simultanous BLE connections the device can establish.
maxConnections.type=NUMBER:1,8
maxConnections.default=3

maxUserAdvertisers.name=Max number of BLE user advertisers
maxUserAdvertisers.description=The maximum number of advertisers the application needs
maxUserAdvertisers.type=NUMBER:1,8
maxUserAdvertisers.default=1

maxPeriodicAdvertisingSync.name=Max number of periodic advertising synchronizations
maxPeriodicAdvertisingSync.description=maximum number of periodic advertising synchronizations the Bluetooth stack needs to support
maxPeriodicAdvertisingSync.type=NUMBER:0,8
maxPeriodicAdvertisingSync.default=0

bleStackSize.name=Stack Task call stack size
bleStackSize.description=The size in 32-bit words of the Bluetooth stack task call stack
bleStackSize.type=NUMBER:25,2500
bleStackSize.default=750
bleStackSize.define=BLUETOOTH_STACK_SIZE

linkLayerStackSize.name=Link Layer Task call stack size
linkLayerStackSize.description=The size in 32-bit words of the Bluetooth Link Layer task call stack
linkLayerStackSize.type=NUMBER:25,2500
linkLayerStackSize.default=500
linkLayerStackSize.define=LINKLAYER_STACK_SIZE