name=Strong Random
description=Plugin provides apis for generating cryptographically strong random numbers.  Options select whether to use mbedtls integration or radio hardware.

category=Utility
qualityString=Alpha Quality
quality=alpha
includedByDefault=true

sourceFiles=$FRAMEWORK/../../stack/framework/strong-random-api.c

providedApis=strong-random
options=radioPrng,mbedtlsTrng
conditions=singleton-dep,mbedtlsProvidesTrng

radioPrng.name=Radio Hardware Support
radioPrng.description=Use radio hardware for true random number generation
radioPrng.type=BOOLEAN
radioPrng.default(unix)=false
radioPrng.default=true
radioPrng.macro=USE_RADIO_API_FOR_TRNG

mbedtlsTrng.name=mbedTLS Integration Support
mbedtlsTrng.description=Use mbedTLS framework for true random number generation
mbedtlsTrng.type=BOOLEAN
mbedtlsTrng.default(unix)=true
mbedtlsTrng.default=false
mbedtlsTrng.macro=USE_MBEDTLS_API_FOR_TRNG

singleton-dep.expression=((radioPrng && !mbedtlsTrng) || (mbedtlsTrng && !radioPrng))
singleton-dep.message=Must pick exactly one (1) option between radio and mbedtls

mbedtlsProvidesTrng.expression=!(!mbedtlsTrng \
                                 && (conf.pluginService().isFeatureEnabled("mbedtls/entropy") \
                                     || conf.pluginService().isFeatureEnabled("mbedtls/ctr-drbg")))
mbedtlsProvidesTrng.message=Mbed TLS provides Entropy and/or CTR-DRBG, must pick mbedtls support in strong-random plugin.

setup(pluginService) {
  mbedtls {
    # Switch on mbed TLS support for entropy, sha256 and CTR-DRBG.
    requiresIf(mbedtlsTrng): ctr-drbg
    requiresIf(mbedtlsTrng): entropy
    requiresIf(mbedtlsTrng): sha256
  }
}
